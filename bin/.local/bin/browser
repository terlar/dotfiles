#!/usr/bin/env bash
set -eu
set -o pipefail

declare CURL_OPTS=('-Ls')
declare MPV_OPTS=()

print_error() {
	local msg="$1"
	local command="${0##*/}"
	>&2 echo "${command}: ${msg}"
}

has_cmd() {
	command -v "$*" >/dev/null
}

is_tty() {
	[[ -t 0 ]]
}

is_graphical() {
	[[ -n "${DISPLAY:-}" ]]
}

url_type() {
	case "$*" in
		https://*.slack.com/files/*)
			echo slack
			;;
		https://youtu.be/*|https://www.youtube.com/watch*)
			echo youtube
			;;
		http://*.tumblr.com/*|https://*.tumblr.com/*)
			echo tumblr
			;;
		http://imgur.com/*|https://imgur.com/*)
			echo imgur
			;;
	esac
}

transform_url() {
	local type="$1"
	local url="$2"

	case "${type}" in
		slack)
			new_url=$(curl "${CURL_OPTS[@]}" "${url}" \
				| sed -e 's|boot_data.file = \({.*}\);|\1|;tx;d;:x' \
				| jq -r '.url_private_download')

			[[ -n "${new_url}" ]] && url="${new_url}"
			;;
		tumblr)
			new_url=$(curl "${CURL_OPTS[@]}" "${url}" \
				| sed -n '/<img/s/.*src="\([^"]*\)".*/\1/p' \
				| grep -m1 '.gif$')

			[[ -n "${new_url}" ]] && url="${new_url}"
			;;
		imgur)
			url="${url/imgur.com/i.imgur.com}.png"
			;;
	esac

	echo "${url}"
}

main() {
	local url browser cookie_file
	cookie_file="${HOME}/.slackcurl/cookies"

	if is_graphical
	then
		browser=qutebrowser
	else
		browser=w3m
	fi

	while getopts :b:c:v opt
	do
		case "${opt}" in
			b)
				browser="${OPTARG}"
				;;
			c)
				cookie_file="${OPTARG}"
				;;
			v)
				set -x
				;;
			'?')
				print_error "invalid option -- '${OPTARG}'"
				return 1
				;;
			:)
				print_error "option requires an argument -- '${OPTARG}'"
				return 1
				;;
		esac
	done
	shift "$((OPTIND - 1))"

	if [[ $# -eq 0 ]]
	then
		if is_tty
		then
			exec "${browser}" &>/dev/null
		else
			local file
			file="$(mktemp /tmp/browser.XXXXXXXX.html)"
			cat /dev/stdin > "$file"
			url="file://${file}"
		fi
	else
		url="$*"
		if [[ -f "${url}" ]]
		then
			url="file://$(realpath "${url}")"
		fi
	fi

	local type new_url
	type="$(url_type "${url}")"

	local mime=''
	if [[ -f "${cookie_file}" ]]
	then
		CURL_OPTS+=('--cookie' "${cookie_file}")
		MPV_OPTS+=('--cookies=yes' "--cookies-file=${cookie_file}")
	fi

	case "${type}" in
		slack|tumblr|imgur)
			url="$(transform_url "${type}" "${url}")"
			;;
		youtube)
			mime=video/youtube
	esac

	if [[ -z "${mime}" ]]
	then
		mime="$(curl "${CURL_OPTS[@]}" -r 0-1 -IX HEAD "${url}" \
			| tr -d '\r' \
			| sed -En 's/^Content-Type: ([-[:alnum:]\/]+).*$/\1/p' \
			| tail -n1)"
	fi

	if [[ -n "${mime}" ]]
	then
		echo "Detected ${mime}, loading..."
	fi

	case "${mime}" in
		image/gif)
			exec curl "${CURL_OPTS[@]}" "${url}" | gifview -a - &
			;;
		image/*)
			exec curl "${CURL_OPTS[@]}" "${url}" | feh -. - &
			;;
		video/*)
			exec mpv "${MPV_OPTS[@]}" "${url}" &>/dev/null &
			;;
		application/force-download)
			local file
			file="${XDG_DOWNLOAD_DIR}/${url##*/}"
			CURL_OPTS+=(-o "${file}")

			curl "${CURL_OPTS[@]}" "${url}"
			notify-send -i down 'File saved' "${file}"
			;;
		*)
			exec "${browser}" "${url}" &>/dev/null &
			;;
	esac
}

main "$@"
