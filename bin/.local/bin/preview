#!/usr/bin/env bash
set -eu
set -o pipefail

print_error() {
	local msg="$1"
	local command="${0##*/}"
	>&2 echo "${command}: ${msg}"
}

has_cmd() {
	command -v "$*" >/dev/null
}

pandoc_opts() {
	local opts=()
	local css_file="${HOME}/.local/share/pandoc/css/default.css"

	[[ -e "${css_file}" ]] && opts+=(-c "${css_file}")
	opts+=(-s)

	echo "${opts[@]}"
}

main() {
	local browser_cmd="${BROWSER}"

	while getopts :b:n:v opt
	do
		case "${opt}" in
			b)
				browser_cmd="${OPTARG}"
				;;
			n)
				browser_cmd="cat"
				;;
			v)
				set -x
				;;
			'?')
				print_error "invalid option -- '${OPTARG}'"
				return 1
				;;
			:)
				print_error "option requires an argument -- '${OPTARG}'"
				return 1
				;;
		esac
	done
	shift "$((OPTIND - 1))"

	local cmd=(awk 1 ORS="<br>")
	local file="$*"

	case "${file}" in
		*.rst)
			has_cmd rst2html  && cmd=(rst2html)
			has_cmd rst2html2 && cmd=(rst2html2)
			has_cmd pandoc    && cmd=(pandoc $(pandoc_opts))
			;;
		*.md)
			has_cmd marked && cmd=(marked)
			has_cmd pandoc && cmd=(pandoc $(pandoc_opts))
			;;
		*.html)
			cmd=(cat)
			;;
	esac

	"${cmd[@]}" "${file}" | "${browser_cmd}"
}

main "$@"
