#!/usr/bin/env bash

[[ "${TRACE}" ]] && set -x
set -euo pipefail

export BAT_THEME=GitHub

usage() {
	cat <<EOF
Usage: ${0##*/} COMMAND
EOF
}

has_cmd() {
	command -v "$*" &>/dev/null
}

print_file() {
	local cmd_path info lexer=""
	local READLINK=readlink
	local CAT=cat

	has_cmd bat && CAT=bat
	has_cmd greadlink && READLINK=greadlink

	cmd_path="$("${READLINK}" -f "$(type -P "$1")")"
	info="$(file -b "${cmd_path}")"

	case "${info}" in
		ELF*|*binary*)
			>&2 echo "cannot cat binary commands"
			>&2 echo "${info}"
			return 1;;
	esac

	"${CAT}" "${cmd_path}"
}

is_interactive() {
	fd=0 # stdin
	[ -t "${fd}" ] || [ -p /dev/stdin ]
}

main() {
	local cmd
	cmd="${1?COMMAND was not provided}"

	if ! has_cmd "${cmd}"
	then
		>&2 echo "unknown command \`${cmd}'"
	fi

	print_file "${cmd}"
}

main "$@"
