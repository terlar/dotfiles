#!/usr/bin/env bash

[[ "${TRACE}" ]] && set -x
set -euo pipefail

usage() {
	cat <<EOF
Usage: ${0##*/} COMMAND
EOF
}

main() {
	local cmd
	cmd="${1?COMMAND was not provided}"

	if ! has_cmd "${cmd}"
	then
		>&2 echo "unknown command \`${cmd}'"
	fi

	if is_interactive
	then
		print_file "${cmd}" | less -R
	else
		print_file "${cmd}"
	fi
}

has_cmd() {
	command -v "$*" &>/dev/null
}

print_file() {
	local cmd_path info lexer=""

	cmd_path="$(readlink -f "$(type -P "$1")")"
	info="$(file -b "${cmd_path}")"

	case "${info}" in
		"Bourne-Again shell script"*) lexer="bash";;
		"Python script"*) lexer="python";;
		ELF*|*binary*)
			>&2 echo "cannot cat binary commands"
			>&2 echo "${info}"
			return 1;;
	esac

	if [[ -n "${lexer}" ]]
	then
		pygmentize -l "${lexer}" "${cmd_path}"
	else
		cat "${cmd_path}"
	fi
}

is_interactive() {
	fd=0 # stdin
	[ -t "${fd}" ] || [ -p /dev/stdin ]
}

main "$@"
