function __kubectl_no_command
    set -l cmd (commandline -poc)
    set -e cmd[1]
    if test (count $cmd) -eq 0
        return 0
    end
    return 1
end

function __kubectl_using_command
    set cmd (commandline -poc)
    if test (count $cmd) -gt 1
        if test $argv[1] = $cmd[2]
            return 0
        end
    end
    return 1
end

function __kubectl_using_option --argument short --argument long
    set cmd (commandline -poc)
    if test (count $cmd) -gt 1
        if string match -qr -- "(-$short|--$long\?)" $cmd[-1]
            return 0
        end
    end
    return 1
end

function __kubectl_resource_types
    echo clusters
    echo componentstatuses
    echo configmaps
    echo daemonsets
    echo deployments
    echo endpoints
    echo events
    echo horizontalpodautoscalers
    echo ingresses
    echo jobs
    echo limitranges
    echo namespaces
    echo networkpolicies
    echo nodes
    echo persistentvolumeclaims
    echo persistentvolumes
    echo pods
    echo podsecuritypolicies
    echo podtemplates
    echo replicasets
    echo replicationcontrollers
    echo resourcequotas
    echo secrets
    echo serviceaccounts
    echo services
    echo statefulsets
    echo storageclasses
    echo thirdpartyresources
end

function __kubectl_pods
    set namespace (string replace -r '^kubectl .*(-n |--namespace[= ]?)([^ ]*) .*$' '$2' -- $argv)
    kubectl get pods --namespace "$namespace" -o name ^/dev/null | string replace 'pod/' ''
end

function __kubectl_containers
    set namespace (string replace -r '^kubectl .*(-n |--namespace[= ]?)([^ ]*) .*$' '$2' -- $argv)
    set pod

    for i in (__kubectl_pods $argv)
        if string match -q "*$i*" -- $argv
            set pod $i
            break
        end
    end

    if test -z "$pod"
        return
    end

    kubectl get --namespace "$namespace" pods "$pod" -o 'jsonpath={.spec.containers[*].name}' | string split ' '
end

function __kubectl_namespaces
    kubectl get namespaces -o name | string replace 'namespace/' ''
end

complete -c kubectl -f -n "__kubectl_no_command" -a create -d "Create a resource by filename or stdin"
complete -c kubectl -f -n "__kubectl_no_command" -a expose -d "Take a replication controller, service, deployment or pod and expose it as a new Kubernetes Service"
complete -c kubectl -f -n "__kubectl_no_command" -a run -d "Run a particular image on the cluster"
complete -c kubectl -f -n "__kubectl_no_command" -a set -d "Set specific features on objects"
complete -c kubectl -f -n "__kubectl_no_command" -a get -d "Display one or many resources"
complete -c kubectl -f -n "__kubectl_no_command" -a explain -d "Documentation of resources"
complete -c kubectl -f -n "__kubectl_no_command" -a edit -d "Edit a resource on the server"
complete -c kubectl -f -n "__kubectl_no_command" -a delete -d "Delete resources by filenames, stdin, resources and names, or by resources and label selector"
complete -c kubectl -f -n "__kubectl_no_command" -a rollout -d "Manage a deployment rollout"
complete -c kubectl -f -n "__kubectl_no_command" -a rolling-update -d "Perform a rolling update of the given ReplicationController"
complete -c kubectl -f -n "__kubectl_no_command" -a scale -d "Set a new size for a Deployment, ReplicaSet, Replication Controller, or Job"
complete -c kubectl -f -n "__kubectl_no_command" -a autoscale -d "Auto-scale a Deployment, ReplicaSet, or ReplicationController"
complete -c kubectl -f -n "__kubectl_no_command" -a certificate -d "Modify certificate resources."
complete -c kubectl -f -n "__kubectl_no_command" -a cluster-info -d "Display cluster info"
complete -c kubectl -f -n "__kubectl_no_command" -a top -d "Display Resource (CPU/Memory/Storage) usage"
complete -c kubectl -f -n "__kubectl_no_command" -a cordon -d "Mark node as unschedulable"
complete -c kubectl -f -n "__kubectl_no_command" -a uncordon -d "Mark node as schedulable"
complete -c kubectl -f -n "__kubectl_no_command" -a drain -d "Drain node in preparation for maintenance"
complete -c kubectl -f -n "__kubectl_no_command" -a taint -d "Update the taints on one or more nodes"
complete -c kubectl -f -n "__kubectl_no_command" -a describe -d "Show details of a specific resource or group of resources"
complete -c kubectl -f -n "__kubectl_no_command" -a logs -d "Print the logs for a container in a pod"
complete -c kubectl -f -n "__kubectl_no_command" -a attach -d "Attach to a running container"
complete -c kubectl -f -n "__kubectl_no_command" -a exec -d "Execute a command in a container"
complete -c kubectl -f -n "__kubectl_no_command" -a port-forward -d "Forward one or more local ports to a pod"
complete -c kubectl -f -n "__kubectl_no_command" -a proxy -d "Run a proxy to the Kubernetes API server"
complete -c kubectl -f -n "__kubectl_no_command" -a cp -d "Copy files and directories to and from containers."
complete -c kubectl -f -n "__kubectl_no_command" -a apply -d "Apply a configuration to a resource by filename or stdin"
complete -c kubectl -f -n "__kubectl_no_command" -a patch -d "Update field(s) of a resource using strategic merge patch"
complete -c kubectl -f -n "__kubectl_no_command" -a replace -d "Replace a resource by filename or stdin"
complete -c kubectl -f -n "__kubectl_no_command" -a convert -d "Convert config files between different API versions"
complete -c kubectl -f -n "__kubectl_no_command" -a label -d "Update the labels on a resource"
complete -c kubectl -f -n "__kubectl_no_command" -a annotate -d "Update the annotations on a resource"
complete -c kubectl -f -n "__kubectl_no_command" -a completion -d "Output shell completion code for the given shell (bash or zsh)"
complete -c kubectl -f -n "__kubectl_no_command" -a api-versions -d "Print the supported API versions on the server, in the form of \"group/version\""
complete -c kubectl -f -n "__kubectl_no_command" -a config -d "Modify kubeconfig files"
complete -c kubectl -f -n "__kubectl_no_command" -a help -d "Help about any command"
complete -c kubectl -f -n "__kubectl_no_command" -a version -d "Print the client and server version information"
complete -c kubectl -n "__kubectl_using_command create" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command create" -l "edit" -d "=false: Edit the API resource before creating"
complete -c kubectl -n "__kubectl_using_command create" -s "f" -d "=[]: Filename, directory, or URL to files to use to create the resource"
complete -c kubectl -n "__kubectl_using_command create" -l "filename" -d "=[]: Filename, directory, or URL to files to use to create the resource"
complete -c kubectl -n "__kubectl_using_command create" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command create" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command create" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command create" -l "record" -d "=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists."
complete -c kubectl -n "__kubectl_using_command create" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command create" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command create" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command create" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command create" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command create" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command create" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command create" -l "validate" -d "=true: If true, use a schema to validate the input before sending it"
complete -c kubectl -n "__kubectl_using_command create" -l "windows-line-endings" -d "=false: Only relevant if --edit=true. Use Windows line-endings (default Unix line-endings) kubectl create -f FILENAME [options]"
complete -c kubectl -n "__kubectl_using_command create" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command create" -l "from-file" -d "=[]: Key files can be specified using their file path, in which case a default name will be given to them, or optionally with a name and file path, in which case the given name will be used.  Specifying a directory will iterate each named file in the directory that is a valid configmap key."
complete -c kubectl -n "__kubectl_using_command create" -l "from-literal" -d "=[]: Specify a key and literal value to insert in configmap (i.e. mykey=somevalue)"
complete -c kubectl -n "__kubectl_using_command create" -l "generator" -d "='configmap/v1': The name of the API generator to use."
complete -c kubectl -n "__kubectl_using_command create" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command create" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command create" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command create" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command create" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command create" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command create" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command create" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl create configmap NAME [--from-file=[key=]source] [--from-literal=key1=value1] [--dry-run] [options]"
complete -c kubectl -n "__kubectl_using_command create" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command create" -l "generator" -d "='deployment-basic/v1beta1': The name of the API generator to use."
complete -c kubectl -n "__kubectl_using_command create" -l "image" -d "=[]: Image name to run."
complete -c kubectl -n "__kubectl_using_command create" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command create" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command create" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command create" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command create" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command create" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command create" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command create" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl create deployment NAME --image=image [--dry-run] [options]"
complete -c kubectl -n "__kubectl_using_command create" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command create" -l "generator" -d "='namespace/v1': The name of the API generator to use."
complete -c kubectl -n "__kubectl_using_command create" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command create" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command create" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command create" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command create" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command create" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command create" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command create" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl create namespace NAME [--dry-run] [options]"
complete -c kubectl -n "__kubectl_using_command create" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command create" -l "generator" -d "='resourcequotas/v1': The name of the API generator to use."
complete -c kubectl -n "__kubectl_using_command create" -l "hard" -d "='': A comma-delimited set of resource=quantity pairs that define a hard limit."
complete -c kubectl -n "__kubectl_using_command create" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command create" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command create" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command create" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command create" -l "scopes" -d "='': A comma-delimited set of quota scopes that must all match each object tracked by the quota."
complete -c kubectl -n "__kubectl_using_command create" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command create" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command create" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command create" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl create quota NAME [--hard=key1=value1,key2=value2] [--scopes=Scope1,Scope2] [--dry-run=bool] [options]"
complete -c kubectl -n "__kubectl_using_command create" -l "docker-email" -d "='': Email for Docker registry"
complete -c kubectl -n "__kubectl_using_command create" -l "docker-password" -d "='': Password for Docker registry authentication"
complete -c kubectl -n "__kubectl_using_command create" -l "docker-server" -d "='https://index.docker.io/v1/': Server location for Docker registry"
complete -c kubectl -n "__kubectl_using_command create" -l "docker-username" -d "='': Username for Docker registry authentication"
complete -c kubectl -n "__kubectl_using_command create" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command create" -l "generator" -d "='secret-for-docker-registry/v1': The name of the API generator to use."
complete -c kubectl -n "__kubectl_using_command create" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command create" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command create" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command create" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command create" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command create" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command create" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command create" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command create" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl create secret docker-registry NAME --docker-username=user --docker-password=password --docker-email=email [--docker-server=string] [--from-literal=key1=value1] [--dry-run] [options]"
complete -c kubectl -n "__kubectl_using_command create" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command create" -l "from-file" -d "=[]: Key files can be specified using their file path, in which case a default name will be given to them, or optionally with a name and file path, in which case the given name will be used.  Specifying a directory will iterate each named file in the directory that is a valid secret key."
complete -c kubectl -n "__kubectl_using_command create" -l "from-literal" -d "=[]: Specify a key and literal value to insert in secret (i.e. mykey=somevalue)"
complete -c kubectl -n "__kubectl_using_command create" -l "generator" -d "='secret/v1': The name of the API generator to use."
complete -c kubectl -n "__kubectl_using_command create" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command create" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command create" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command create" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command create" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command create" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command create" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command create" -l "type" -d "='': The type of secret to create"
complete -c kubectl -n "__kubectl_using_command create" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl create secret generic NAME [--type=string] [--from-file=[key=]source] [--from-literal=key1=value1] [--dry-run] [options]"
complete -c kubectl -n "__kubectl_using_command create" -l "cert" -d "='': Path to PEM encoded public key certificate."
complete -c kubectl -n "__kubectl_using_command create" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command create" -l "generator" -d "='secret-for-tls/v1': The name of the API generator to use."
complete -c kubectl -n "__kubectl_using_command create" -l "key" -d "='': Path to private key associated with given certificate."
complete -c kubectl -n "__kubectl_using_command create" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command create" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command create" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command create" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command create" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command create" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command create" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command create" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl create secret tls NAME --cert=path/to/cert/file --key=path/to/key/file [--dry-run] [options]"
complete -c kubectl -n "__kubectl_using_command create" -l "clusterip" -d "='': Assign your own ClusterIP or set to 'None' for a 'headless' service (no loadbalancing)."
complete -c kubectl -n "__kubectl_using_command create" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command create" -l "generator" -d "='service-clusterip/v1': The name of the API generator to use."
complete -c kubectl -n "__kubectl_using_command create" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command create" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command create" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command create" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command create" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command create" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command create" -l "tcp" -d "=[]: Port pairs can be specified as '<port>:<targetPort>'."
complete -c kubectl -n "__kubectl_using_command create" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command create" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl create service clusterip NAME [--tcp=<port>:<targetPort>] [--dry-run] [options]"
complete -c kubectl -n "__kubectl_using_command create" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command create" -l "generator" -d "='service-loadbalancer/v1': The name of the API generator to use."
complete -c kubectl -n "__kubectl_using_command create" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command create" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command create" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command create" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command create" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command create" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command create" -l "tcp" -d "=[]: Port pairs can be specified as '<port>:<targetPort>'."
complete -c kubectl -n "__kubectl_using_command create" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command create" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl create service loadbalancer NAME [--tcp=port:targetPort] [--dry-run] [options]"
complete -c kubectl -n "__kubectl_using_command create" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command create" -l "generator" -d "='service-nodeport/v1': The name of the API generator to use."
complete -c kubectl -n "__kubectl_using_command create" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command create" -l "node-port" -d "=0: Port used to expose the service on each node in a cluster."
complete -c kubectl -n "__kubectl_using_command create" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command create" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command create" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command create" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command create" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command create" -l "tcp" -d "=[]: Port pairs can be specified as '<port>:<targetPort>'."
complete -c kubectl -n "__kubectl_using_command create" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command create" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl create service nodeport NAME [--tcp=port:targetPort] [--dry-run] [options]"
complete -c kubectl -n "__kubectl_using_command create" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command create" -l "generator" -d "='serviceaccount/v1': The name of the API generator to use."
complete -c kubectl -n "__kubectl_using_command create" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command create" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command create" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command create" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command create" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command create" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command create" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command create" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command create" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command create" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command create" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl create serviceaccount NAME [--dry-run] [options]"
complete -c kubectl -n "__kubectl_using_command expose" -l "cluster-ip" -d "='': ClusterIP to be assigned to the service. Leave empty to auto-allocate, or set to 'None' to create a headless service."
complete -c kubectl -n "__kubectl_using_command expose" -l "container-port" -d "='': Synonym for --target-port"
complete -c kubectl -n "__kubectl_using_command expose" -l "create-external-load-balancer" -d "=false: If true, create an external load balancer for this service (trumped by --type). Implementation is cloud provider dependent. Default is 'false'."
complete -c kubectl -n "__kubectl_using_command expose" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command expose" -l "external-ip" -d "='': Additional external IP address (not managed by Kubernetes) to accept for the service. If this IP is routed to a node, the service can be accessed by this IP in addition to its generated service IP."
complete -c kubectl -n "__kubectl_using_command expose" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to expose a service"
complete -c kubectl -n "__kubectl_using_command expose" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to expose a service"
complete -c kubectl -n "__kubectl_using_command expose" -l "generator" -d "='service/v2': The name of the API generator to use. There are 2 generators: 'service/v1' and 'service/v2'. The only difference between them is that service port in v1 is named 'default', while it is left unnamed in v2. Default is 'service/v2'."
complete -c kubectl -n "__kubectl_using_command expose" -s "l" -d "='': Labels to apply to the service created by this call."
complete -c kubectl -n "__kubectl_using_command expose" -l "labels" -d "='': Labels to apply to the service created by this call."
complete -c kubectl -n "__kubectl_using_command expose" -l "load-balancer-ip" -d "='': IP to assign to the Load Balancer. If empty, an ephemeral IP will be created and used (cloud-provider specific)."
complete -c kubectl -n "__kubectl_using_command expose" -l "name" -d "='': The name for the newly created object."
complete -c kubectl -n "__kubectl_using_command expose" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command expose" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command expose" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command expose" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command expose" -l "overrides" -d "='': An inline JSON override for the generated object. If this is non-empty, it is used to override the generated object. Requires that the object supply a valid apiVersion field."
complete -c kubectl -n "__kubectl_using_command expose" -l "port" -d "='': The port that the service should serve on. Copied from the resource being exposed, if unspecified"
complete -c kubectl -n "__kubectl_using_command expose" -l "protocol" -d "='': The network protocol for the service to be created. Default is 'TCP'."
complete -c kubectl -n "__kubectl_using_command expose" -l "record" -d "=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists."
complete -c kubectl -n "__kubectl_using_command expose" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command expose" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command expose" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command expose" -l "selector" -d "='': A label selector to use for this service. Only equality-based selector requirements are supported. If empty (the default) infer the selector from the replication controller or replica set."
complete -c kubectl -n "__kubectl_using_command expose" -l "session-affinity" -d "='': If non-empty, set the session affinity for the service to this; legal values: 'None', 'ClientIP'"
complete -c kubectl -n "__kubectl_using_command expose" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command expose" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command expose" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command expose" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command expose" -l "target-port" -d "='': Name or number for the port on the container that the service should direct traffic to. Optional."
complete -c kubectl -n "__kubectl_using_command expose" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command expose" -l "type" -d "='': Type for this service: ClusterIP, NodePort, or LoadBalancer. Default is 'ClusterIP'. kubectl expose (-f FILENAME | TYPE NAME) [--port=port] [--protocol=TCP|UDP] [--target-port=number-or-name] [--name=name] [--external-ip=external-ip-of-service] [--type=type] [options]"
complete -c kubectl -n "__kubectl_using_command run" -l "attach" -d "=false: If true, wait for the Pod to start running, and then attach to the Pod as if 'kubectl attach ...' were called.  Default false, unless '-i/--stdin' is set, in which case the default is true. With '--restart=Never' the exit code of the container process is returned."
complete -c kubectl -n "__kubectl_using_command run" -l command -d "=false: If true and extra arguments are present, use them as the 'command' field in the container, rather than the 'args' field which is the default."
complete -c kubectl -n "__kubectl_using_command run" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command run" -l "env" -d "=[]: Environment variables to set in the container"
complete -c kubectl -n "__kubectl_using_command run" -l "expose" -d "=false: If true, a public, external service is created for the container(s) which are run"
complete -c kubectl -n "__kubectl_using_command run" -l "generator" -d "='': The name of the API generator to use, see http://kubernetes.io/docs/user-guide/kubectl-conventions/#generators for a list."
complete -c kubectl -n "__kubectl_using_command run" -l "hostport" -d "=-1: The host port mapping for the container port. To demonstrate a single-machine container."
complete -c kubectl -n "__kubectl_using_command run" -l "image" -d "='': The image for the container to run."
complete -c kubectl -n "__kubectl_using_command run" -l "image-pull-policy" -d "='': The image pull policy for the container. If left empty, this value will not be specified by the client and defaulted by the server"
complete -c kubectl -n "__kubectl_using_command run" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command run" -s "l" -d "='': Labels to apply to the pod(s)."
complete -c kubectl -n "__kubectl_using_command run" -l "labels" -d "='': Labels to apply to the pod(s)."
complete -c kubectl -n "__kubectl_using_command run" -l "leave-stdin-open" -d "=false: If the pod is started in interactive mode or with stdin, leave stdin open after the first attach completes. By default, stdin will be closed after the first attach completes."
complete -c kubectl -n "__kubectl_using_command run" -l "limits" -d "='': The resource requirement limits for this container.  For example, 'cpu=200m,memory=512Mi'.  Note that server side components may assign limits depending on the server configuration, such as limit ranges."
complete -c kubectl -n "__kubectl_using_command run" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command run" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command run" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command run" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command run" -l "overrides" -d "='': An inline JSON override for the generated object. If this is non-empty, it is used to override the generated object. Requires that the object supply a valid apiVersion field."
complete -c kubectl -n "__kubectl_using_command run" -l "port" -d "='': The port that this container exposes.  If --expose is true, this is also the port used by the service that is created."
complete -c kubectl -n "__kubectl_using_command run" -l "quiet" -d "=false: If true, suppress prompt messages."
complete -c kubectl -n "__kubectl_using_command run" -l "record" -d "=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists."
complete -c kubectl -n "__kubectl_using_command run" -s "r" -d "=1: Number of replicas to create for this container. Default is 1."
complete -c kubectl -n "__kubectl_using_command run" -l "replicas" -d "=1: Number of replicas to create for this container. Default is 1."
complete -c kubectl -n "__kubectl_using_command run" -l "requests" -d "='': The resource requirement requests for this container.  For example, 'cpu=100m,memory=256Mi'.  Note that server side components may assign requests depending on the server configuration, such as limit ranges."
complete -c kubectl -n "__kubectl_using_command run" -l "restart" -d "='Always': The restart policy for this Pod.  Legal values [Always, OnFailure, Never].  If set to 'Always' a deployment is created, if set to 'OnFailure' a job is created, if set to 'Never', a regular pod is created. For the latter two --replicas must be 1.  Default 'Always', for ScheduledJobs `Never`."
complete -c kubectl -n "__kubectl_using_command run" -l "rm" -d "=false: If true, delete resources created in this command for attached containers."
complete -c kubectl -n "__kubectl_using_command run" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command run" -l "schedule" -d "='': A schedule in the Cron format the job should be run with."
complete -c kubectl -n "__kubectl_using_command run" -l "service-generator" -d "='service/v2': The name of the generator to use for creating a service.  Only used if --expose is true"
complete -c kubectl -n "__kubectl_using_command run" -l "service-overrides" -d "='': An inline JSON override for the generated service object. If this is non-empty, it is used to override the generated object. Requires that the object supply a valid apiVersion field.  Only used if --expose is true."
complete -c kubectl -n "__kubectl_using_command run" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command run" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command run" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command run" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command run" -s "i" -d "=false: Keep stdin open on the container(s) in the pod, even if nothing is attached."
complete -c kubectl -n "__kubectl_using_command run" -l "stdin" -d "=false: Keep stdin open on the container(s) in the pod, even if nothing is attached."
complete -c kubectl -n "__kubectl_using_command run" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command run" -s "t" -d "=false: Allocated a TTY for each container in the pod. kubectl run NAME --image=image [--env=\"key=value\"] [--port=port] [--replicas=replicas] [--dry-run=bool] [--overrides=inline-json] [--command] -- [COMMAND] [args...] [options]"
complete -c kubectl -n "__kubectl_using_command run" -l "tty" -d "=false: Allocated a TTY for each container in the pod. kubectl run NAME --image=image [--env=\"key=value\"] [--port=port] [--replicas=replicas] [--dry-run=bool] [--overrides=inline-json] [--command] -- [COMMAND] [args...] [options]"
complete -c kubectl -n "__kubectl_using_command set" -l "all" -d "=false: select all resources in the namespace of the specified resource types"
complete -c kubectl -n "__kubectl_using_command set" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command set" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command set" -l "local" -d "=false: If true, set image will NOT contact api-server but run locally."
complete -c kubectl -n "__kubectl_using_command set" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command set" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command set" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command set" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command set" -l "record" -d "=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists."
complete -c kubectl -n "__kubectl_using_command set" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command set" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command set" -s "l" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command set" -l "selector" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command set" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command set" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command set" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command set" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command set" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]. kubectl set image (-f FILENAME | TYPE NAME) CONTAINER_NAME_1=CONTAINER_IMAGE_1 ... CONTAINER_NAME_N=CONTAINER_IMAGE_N [options]"
complete -c kubectl -n "__kubectl_using_command set" -l "all" -d "=false: select all resources in the namespace of the specified resource types"
complete -c kubectl -n "__kubectl_using_command set" -s "c" -d "='*': The names of containers in the selected pod templates to change, all containers are selected by default - may use wildcards"
complete -c kubectl -n "__kubectl_using_command set" -l "containers" -d "='*': The names of containers in the selected pod templates to change, all containers are selected by default - may use wildcards"
complete -c kubectl -n "__kubectl_using_command set" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command set" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command set" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command set" -l "limits" -d "='': The resource requirement requests for this container.  For example, 'cpu=100m,memory=256Mi'.  Note that server side components may assign requests depending on the server configuration, such as limit ranges."
complete -c kubectl -n "__kubectl_using_command set" -l "local" -d "=false: If true, set resources will NOT contact api-server but run locally."
complete -c kubectl -n "__kubectl_using_command set" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command set" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command set" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command set" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command set" -l "record" -d "=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists."
complete -c kubectl -n "__kubectl_using_command set" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command set" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command set" -l "requests" -d "='': The resource requirement requests for this container.  For example, 'cpu=100m,memory=256Mi'.  Note that server side components may assign requests depending on the server configuration, such as limit ranges."
complete -c kubectl -n "__kubectl_using_command set" -s "l" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command set" -l "selector" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command set" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command set" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command set" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command set" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command set" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]. kubectl set resources (-f FILENAME | TYPE NAME)  ([--limits=LIMITS & --requests=REQUESTS] [options]"
complete -c kubectl -n "__kubectl_using_command get" -l "all-namespaces" -d "=false: If present, list the requested object(s) across all namespaces. Namespace in current context is ignored even if specified with --namespace."
complete -c kubectl -n "__kubectl_using_command get" -l "export" -d "=false: If true, use 'export' for the resources.  Exported resources are stripped of cluster-specific information."
complete -c kubectl -n "__kubectl_using_command get" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command get" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command get" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command get" -s "L" -d "=[]: Accepts a comma separated list of labels that are going to be presented as columns. Names are case-sensitive. You can also use multiple flag options like -L label1 -L label2..."
complete -c kubectl -n "__kubectl_using_command get" -l "label-columns" -d "=[]: Accepts a comma separated list of labels that are going to be presented as columns. Names are case-sensitive. You can also use multiple flag options like -L label1 -L label2..."
complete -c kubectl -n "__kubectl_using_command get" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command get" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command get" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command get" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command get" -l "raw" -d "='': Raw URI to request from the server.  Uses the transport specified by the kubeconfig file."
complete -c kubectl -n "__kubectl_using_command get" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command get" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command get" -s "l" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command get" -l "selector" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command get" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command get" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command get" -l "show-kind" -d "=false: If present, list the resource type for the requested object(s)."
complete -c kubectl -n "__kubectl_using_command get" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command get" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command get" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command get" -s "w" -d "=false: After listing/getting the requested object, watch for changes."
complete -c kubectl -n "__kubectl_using_command get" -l "watch" -d "=false: After listing/getting the requested object, watch for changes."
complete -c kubectl -n "__kubectl_using_command get" -l "watch-only" -d "=false: Watch for changes to the requested object(s), without listing/getting first. kubectl get [(-o|--output=)json|yaml|wide|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=...] (TYPE [NAME | -l label] | TYPE/NAME ...) [flags] [options]"
complete -c kubectl -n "__kubectl_using_command explain" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command explain" -l "recursive" -d "=false: Print the fields of fields (Currently only 1 level deep) kubectl explain RESOURCE [options]"
complete -c kubectl -n "__kubectl_using_command edit" -s "f" -d "=[]: Filename, directory, or URL to files to use to edit the resource"
complete -c kubectl -n "__kubectl_using_command edit" -l "filename" -d "=[]: Filename, directory, or URL to files to use to edit the resource"
complete -c kubectl -n "__kubectl_using_command edit" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command edit" -s "o" -d "='yaml': Output format. One of: yaml|json."
complete -c kubectl -n "__kubectl_using_command edit" -l "output" -d "='yaml': Output format. One of: yaml|json."
complete -c kubectl -n "__kubectl_using_command edit" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command edit" -l "record" -d "=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists."
complete -c kubectl -n "__kubectl_using_command edit" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command edit" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command edit" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command edit" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command edit" -l "validate" -d "=true: If true, use a schema to validate the input before sending it"
complete -c kubectl -n "__kubectl_using_command edit" -l "windows-line-endings" -d "=false: Use Windows line-endings (default Unix line-endings) kubectl edit (RESOURCE/NAME | -f FILENAME) [options]"
complete -c kubectl -n "__kubectl_using_command delete" -l "all" -d "=false: [-all] to select all the specified resources."
complete -c kubectl -n "__kubectl_using_command delete" -l "cascade" -d "=true: If true, cascade the deletion of the resources managed by this resource (e.g. Pods created by a ReplicationController).  Default true."
complete -c kubectl -n "__kubectl_using_command delete" -s "f" -d "=[]: Filename, directory, or URL to files containing the resource to delete."
complete -c kubectl -n "__kubectl_using_command delete" -l "filename" -d "=[]: Filename, directory, or URL to files containing the resource to delete."
complete -c kubectl -n "__kubectl_using_command delete" -l "force" -d "=false: Immediate deletion of some resources may result in inconsistency or data loss and requires confirmation."
complete -c kubectl -n "__kubectl_using_command delete" -l "grace-period" -d "=-1: Period of time in seconds given to the resource to terminate gracefully. Ignored if negative."
complete -c kubectl -n "__kubectl_using_command delete" -l "ignore-not-found" -d "=false: Treat \"resource not found\" as a successful delete. Defaults to \"true\" when --all is specified."
complete -c kubectl -n "__kubectl_using_command delete" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command delete" -l "now" -d "=false: If true, resources are signaled for immediate shutdown (same as --grace-period=1)."
complete -c kubectl -n "__kubectl_using_command delete" -s "o" -d "='': Output mode. Use \"-o name\" for shorter output (resource/name)."
complete -c kubectl -n "__kubectl_using_command delete" -l "output" -d "='': Output mode. Use \"-o name\" for shorter output (resource/name)."
complete -c kubectl -n "__kubectl_using_command delete" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command delete" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command delete" -s "l" -d "='': Selector (label query) to filter on."
complete -c kubectl -n "__kubectl_using_command delete" -l "selector" -d "='': Selector (label query) to filter on."
complete -c kubectl -n "__kubectl_using_command delete" -l "timeout" -d "=0s: The length of time to wait before giving up on a delete, zero means determine a timeout from the size of the object kubectl delete ([-f FILENAME] | TYPE [(NAME | -l label | --all)]) [options]"
complete -c kubectl -n "__kubectl_using_command rollout" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command rollout" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command rollout" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command rollout" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command rollout" -l "revision" -d "=0: See the details, including podTemplate of the revision specified kubectl rollout history (TYPE NAME | TYPE/NAME) [flags] [options]"
complete -c kubectl -n "__kubectl_using_command rollout" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command rollout" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command rollout" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory. kubectl rollout pause RESOURCE [options]"
complete -c kubectl -n "__kubectl_using_command rollout" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory. kubectl rollout pause RESOURCE [options]"
complete -c kubectl -n "__kubectl_using_command rollout" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command rollout" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command rollout" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory. kubectl rollout resume RESOURCE [options]"
complete -c kubectl -n "__kubectl_using_command rollout" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory. kubectl rollout resume RESOURCE [options]"
complete -c kubectl -n "__kubectl_using_command rollout" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command rollout" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command rollout" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command rollout" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command rollout" -l "revision" -d "=0: Pin to a specific revision for showing its status. Defaults to 0 (last revision)."
complete -c kubectl -n "__kubectl_using_command rollout" -s "w" -d "=true: Watch the status of the rollout until it's done. kubectl rollout status (TYPE NAME | TYPE/NAME) [flags] [options]"
complete -c kubectl -n "__kubectl_using_command rollout" -l "watch" -d "=true: Watch the status of the rollout until it's done. kubectl rollout status (TYPE NAME | TYPE/NAME) [flags] [options]"
complete -c kubectl -n "__kubectl_using_command rollout" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command rollout" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command rollout" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to get from a server."
complete -c kubectl -n "__kubectl_using_command rollout" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command rollout" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command rollout" -l "to-revision" -d "=0: The revision to rollback to. Default to 0 (last revision). kubectl rollout undo (TYPE NAME | TYPE/NAME) [flags] [options]"
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "container" -d "='': Container name which will have its image upgraded. Only relevant when --image is specified, ignored otherwise. Required when using --image on a multi-container pod"
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "deployment-label-key" -d "='deployment': The key to use to differentiate between two different controllers, default 'deployment'.  Only relevant when --image is specified, ignored otherwise"
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command rolling-update" -s "f" -d "=[]: Filename or URL to file to use to create the new replication controller."
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "filename" -d "=[]: Filename or URL to file to use to create the new replication controller."
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "image" -d "='': Image to use for upgrading the replication controller. Must be distinct from the existing image (either new image or new image tag).  Can not be used with --filename/-f"
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "image-pull-policy" -d "='': Explicit policy for when to pull container images. Required when --image is same as existing image, ignored otherwise."
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command rolling-update" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "poll-interval" -d "=3s: Time delay between polling for replication controller status after the update. Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\"."
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "rollback" -d "=false: If true, this is a request to abort an existing rollout that is partially rolled out. It effectively reverses current and next and runs a rollout"
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command rolling-update" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "timeout" -d "=5m0s: Max time to wait for a replication controller to update before giving up. Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\"."
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "update-period" -d "=1m0s: Time to wait between updating pods. Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\"."
complete -c kubectl -n "__kubectl_using_command rolling-update" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl rolling-update OLD_CONTROLLER_NAME ([NEW_CONTROLLER_NAME] --image=NEW_CONTAINER_IMAGE | -f NEW_CONTROLLER_SPEC) [options]"
complete -c kubectl -n "__kubectl_using_command scale" -l "current-replicas" -d "=-1: Precondition for current size. Requires that the current size of the resource match this value in order to scale."
complete -c kubectl -n "__kubectl_using_command scale" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to set a new size"
complete -c kubectl -n "__kubectl_using_command scale" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to set a new size"
complete -c kubectl -n "__kubectl_using_command scale" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command scale" -s "o" -d "='': Output mode. Use \"-o name\" for shorter output (resource/name)."
complete -c kubectl -n "__kubectl_using_command scale" -l "output" -d "='': Output mode. Use \"-o name\" for shorter output (resource/name)."
complete -c kubectl -n "__kubectl_using_command scale" -l "record" -d "=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists."
complete -c kubectl -n "__kubectl_using_command scale" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command scale" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command scale" -l "replicas" -d "=-1: The new desired number of replicas. Required."
complete -c kubectl -n "__kubectl_using_command scale" -l "resource-version" -d "='': Precondition for resource version. Requires that the current resource version match this value in order to scale."
complete -c kubectl -n "__kubectl_using_command scale" -l "timeout" -d "=0s: The length of time to wait before giving up on a scale operation, zero means don't wait. Any other values should contain a corresponding time unit (e.g. 1s, 2m, 3h). kubectl scale [--resource-version=version] [--current-replicas=count] --replicas=COUNT (-f FILENAME | TYPE NAME) [options]"
complete -c kubectl -n "__kubectl_using_command autoscale" -l "cpu-percent" -d "=-1: The target average CPU utilization (represented as a percent of requested CPU) over all the pods. If it's not specified or negative, a default autoscaling policy will be used."
complete -c kubectl -n "__kubectl_using_command autoscale" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command autoscale" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to autoscale."
complete -c kubectl -n "__kubectl_using_command autoscale" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to autoscale."
complete -c kubectl -n "__kubectl_using_command autoscale" -l "generator" -d "='horizontalpodautoscaler/v1': The name of the API generator to use. Currently there is only 1 generator."
complete -c kubectl -n "__kubectl_using_command autoscale" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command autoscale" -l "max" -d "=-1: The upper limit for the number of pods that can be set by the autoscaler. Required."
complete -c kubectl -n "__kubectl_using_command autoscale" -l "min" -d "=-1: The lower limit for the number of pods that can be set by the autoscaler. If it's not specified or negative, the server will apply a default value."
complete -c kubectl -n "__kubectl_using_command autoscale" -l "name" -d "='': The name for the newly created object. If not specified, the name of the input resource will be used."
complete -c kubectl -n "__kubectl_using_command autoscale" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command autoscale" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command autoscale" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command autoscale" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command autoscale" -l "record" -d "=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists."
complete -c kubectl -n "__kubectl_using_command autoscale" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command autoscale" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command autoscale" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command autoscale" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command autoscale" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command autoscale" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command autoscale" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command autoscale" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]. kubectl autoscale (-f FILENAME | TYPE NAME | TYPE/NAME) [--min=MINPODS] --max=MAXPODS [--cpu-percent=CPU] [flags] [options]"
complete -c kubectl -n "__kubectl_using_command certificate" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to update"
complete -c kubectl -n "__kubectl_using_command certificate" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to update"
complete -c kubectl -n "__kubectl_using_command certificate" -s "o" -d "='': Output mode. Use \"-o name\" for shorter output (resource/name)."
complete -c kubectl -n "__kubectl_using_command certificate" -l "output" -d "='': Output mode. Use \"-o name\" for shorter output (resource/name)."
complete -c kubectl -n "__kubectl_using_command certificate" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory. kubectl certificate approve (-f FILENAME | NAME) [options]"
complete -c kubectl -n "__kubectl_using_command certificate" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory. kubectl certificate approve (-f FILENAME | NAME) [options]"
complete -c kubectl -n "__kubectl_using_command certificate" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to update"
complete -c kubectl -n "__kubectl_using_command certificate" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to update"
complete -c kubectl -n "__kubectl_using_command certificate" -s "o" -d "='': Output mode. Use \"-o name\" for shorter output (resource/name)."
complete -c kubectl -n "__kubectl_using_command certificate" -l "output" -d "='': Output mode. Use \"-o name\" for shorter output (resource/name)."
complete -c kubectl -n "__kubectl_using_command certificate" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory. kubectl certificate deny (-f FILENAME | NAME) [options]"
complete -c kubectl -n "__kubectl_using_command certificate" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory. kubectl certificate deny (-f FILENAME | NAME) [options]"
complete -c kubectl -n "__kubectl_using_command cluster-info" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true] kubectl cluster-info [options]"
complete -c kubectl -n "__kubectl_using_command cluster-info" -l "all-namespaces" -d "=false: If true, dump all namespaces.  If true, --namespaces is ignored."
complete -c kubectl -n "__kubectl_using_command cluster-info" -l "namespaces" -d "=[]: A comma separated list of namespaces to dump."
complete -c kubectl -n "__kubectl_using_command cluster-info" -l "output-directory" -d "='': Where to output the files.  If empty or '-' uses stdout, otherwise creates a directory hierarchy in that directory kubectl cluster-info dump [options]"
complete -c kubectl -n "__kubectl_using_command top" -s "l" -d "='': Selector (label query) to filter on kubectl top node [NAME | -l label] [options]"
complete -c kubectl -n "__kubectl_using_command top" -l "selector" -d "='': Selector (label query) to filter on kubectl top node [NAME | -l label] [options]"
complete -c kubectl -n "__kubectl_using_command top" -l "all-namespaces" -d "=false: If present, list the requested object(s) across all namespaces. Namespace in current context is ignored even if specified with --namespace."
complete -c kubectl -n "__kubectl_using_command top" -l "containers" -d "=false: If present, print usage of containers within a pod."
complete -c kubectl -n "__kubectl_using_command top" -s "l" -d "='': Selector (label query) to filter on kubectl top pod [NAME | -l label] [options]"
complete -c kubectl -n "__kubectl_using_command top" -l "selector" -d "='': Selector (label query) to filter on kubectl top pod [NAME | -l label] [options]"
complete -c kubectl -n "__kubectl_using_command drain" -l "delete-local-data" -d "=false: Continue even if there are pods using emptyDir (local data that will be deleted when the node is drained)."
complete -c kubectl -n "__kubectl_using_command drain" -l "force" -d "=false: Continue even if there are pods not managed by a ReplicationController, ReplicaSet, Job, DaemonSet or StatefulSet."
complete -c kubectl -n "__kubectl_using_command drain" -l "grace-period" -d "=-1: Period of time in seconds given to each pod to terminate gracefully. If negative, the default value specified in the pod will be used."
complete -c kubectl -n "__kubectl_using_command drain" -l "ignore-daemonsets" -d "=false: Ignore DaemonSet-managed pods."
complete -c kubectl -n "__kubectl_using_command drain" -l "timeout" -d "=0s: The length of time to wait before giving up, zero means infinite kubectl drain NODE [options]"
complete -c kubectl -n "__kubectl_using_command taint" -l "all" -d "=false: select all nodes in the cluster"
complete -c kubectl -n "__kubectl_using_command taint" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command taint" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command taint" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command taint" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command taint" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command taint" -l "overwrite" -d "=false: If true, allow taints to be overwritten, otherwise reject taint updates that overwrite existing taints."
complete -c kubectl -n "__kubectl_using_command taint" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command taint" -s "l" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command taint" -l "selector" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command taint" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command taint" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command taint" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command taint" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command taint" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command taint" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl taint NODE NAME KEY_1=VAL_1:TAINT_EFFECT_1 ... KEY_N=VAL_N:TAINT_EFFECT_N [options]"
complete -c kubectl -n "__kubectl_using_command describe" -l "all-namespaces" -d "=false: If present, list the requested object(s) across all namespaces. Namespace in current context is ignored even if specified with --namespace."
complete -c kubectl -n "__kubectl_using_command describe" -s "f" -d "=[]: Filename, directory, or URL to files containing the resource to describe"
complete -c kubectl -n "__kubectl_using_command describe" -l "filename" -d "=[]: Filename, directory, or URL to files containing the resource to describe"
complete -c kubectl -n "__kubectl_using_command describe" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command describe" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command describe" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command describe" -s "l" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command describe" -l "selector" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command describe" -l "show-events" -d "=true: If true, display events related to the described object. kubectl describe (-f FILENAME | TYPE [NAME_PREFIX | -l label] | TYPE/NAME) [options]"
complete -c kubectl -n "__kubectl_using_command logs" -s "c" -d "='': Print the logs of this container"
complete -c kubectl -n "__kubectl_using_command logs" -l "container" -d "='': Print the logs of this container"
complete -c kubectl -n "__kubectl_using_command logs" -s "f" -d "=false: Specify if the logs should be streamed."
complete -c kubectl -n "__kubectl_using_command logs" -l "follow" -d "=false: Specify if the logs should be streamed."
complete -c kubectl -n "__kubectl_using_command logs" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command logs" -l "interactive" -d "=false: If true, prompt the user for input when required."
complete -c kubectl -n "__kubectl_using_command logs" -l "limit-bytes" -d "=0: Maximum bytes of logs to return. Defaults to no limit."
complete -c kubectl -n "__kubectl_using_command logs" -s "p" -d "=false: If true, print the logs for the previous instance of the container in a pod if it exists."
complete -c kubectl -n "__kubectl_using_command logs" -l "previous" -d "=false: If true, print the logs for the previous instance of the container in a pod if it exists."
complete -c kubectl -n "__kubectl_using_command logs" -l "since" -d "=0s: Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of since-time / since may be used."
complete -c kubectl -n "__kubectl_using_command logs" -l "since-time" -d "='': Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of since-time / since may be used."
complete -c kubectl -n "__kubectl_using_command logs" -l "tail" -d "=-1: Lines of recent log file to display. Defaults to -1, showing all log lines."
complete -c kubectl -n "__kubectl_using_command logs" -l "timestamps" -d "=false: Include timestamps on each line in the log output kubectl logs [-f] [-p] POD [-c CONTAINER] [options]"
complete -c kubectl -n "__kubectl_using_command attach" -s "c" -d "='': Container name. If omitted, the first container in the pod will be chosen"
complete -c kubectl -n "__kubectl_using_command attach" -l "container" -d "='': Container name. If omitted, the first container in the pod will be chosen"
complete -c kubectl -n "__kubectl_using_command attach" -s "i" -d "=false: Pass stdin to the container"
complete -c kubectl -n "__kubectl_using_command attach" -l "stdin" -d "=false: Pass stdin to the container"
complete -c kubectl -n "__kubectl_using_command attach" -s "t" -d "=false: Stdin is a TTY kubectl attach POD -c CONTAINER [options]"
complete -c kubectl -n "__kubectl_using_command attach" -l "tty" -d "=false: Stdin is a TTY kubectl attach POD -c CONTAINER [options]"
complete -c kubectl -n "__kubectl_using_command exec" -s "c" -d "='': Container name. If omitted, the first container in the pod will be chosen"
complete -c kubectl -n "__kubectl_using_command exec" -l "container" -d "='': Container name. If omitted, the first container in the pod will be chosen"
complete -c kubectl -n "__kubectl_using_command exec" -s "p" -d "='': Pod name"
complete -c kubectl -n "__kubectl_using_command exec" -l "pod" -d "='': Pod name"
complete -c kubectl -n "__kubectl_using_command exec" -s "i" -d "=false: Pass stdin to the container"
complete -c kubectl -n "__kubectl_using_command exec" -l "stdin" -d "=false: Pass stdin to the container"
complete -c kubectl -n "__kubectl_using_command exec" -s "t" -d "=false: Stdin is a TTY kubectl exec POD [-c CONTAINER] -- COMMAND [args...] [options]"
complete -c kubectl -n "__kubectl_using_command exec" -l "tty" -d "=false: Stdin is a TTY kubectl exec POD [-c CONTAINER] -- COMMAND [args...] [options]"
complete -c kubectl -n "__kubectl_using_command port-forward" -s "p" -d "='': Pod name kubectl port-forward POD [LOCAL_PORT:]REMOTE_PORT [...[LOCAL_PORT_N:]REMOTE_PORT_N] [options]"
complete -c kubectl -n "__kubectl_using_command port-forward" -l "pod" -d "='': Pod name kubectl port-forward POD [LOCAL_PORT:]REMOTE_PORT [...[LOCAL_PORT_N:]REMOTE_PORT_N] [options]"
complete -c kubectl -n "__kubectl_using_command proxy" -l "accept-hosts" -d "='^localhost\$,^127\.0\.0\.1\$,^\[::1\]\$': Regular expression for hosts that the proxy should accept."
complete -c kubectl -n "__kubectl_using_command proxy" -l "accept-paths" -d "='^/.*': Regular expression for paths that the proxy should accept."
complete -c kubectl -n "__kubectl_using_command proxy" -l "address" -d "='127.0.0.1': The IP address on which to serve on."
complete -c kubectl -n "__kubectl_using_command proxy" -l "api-prefix" -d "='/': Prefix to serve the proxied API under."
complete -c kubectl -n "__kubectl_using_command proxy" -l "disable-filter" -d "=false: If true, disable request filtering in the proxy. This is dangerous, and can leave you vulnerable to XSRF attacks, when used with an accessible port."
complete -c kubectl -n "__kubectl_using_command proxy" -s "p" -d "=8001: The port on which to run the proxy. Set to 0 to pick a random port."
complete -c kubectl -n "__kubectl_using_command proxy" -l "port" -d "=8001: The port on which to run the proxy. Set to 0 to pick a random port."
complete -c kubectl -n "__kubectl_using_command proxy" -l "reject-methods" -d "='POST,PUT,PATCH': Regular expression for HTTP methods that the proxy should reject."
complete -c kubectl -n "__kubectl_using_command proxy" -l "reject-paths" -d "='^/api/.*/pods/.*/exec,^/api/.*/pods/.*/attach': Regular expression for paths that the proxy should reject."
complete -c kubectl -n "__kubectl_using_command proxy" -s "u" -d "='': Unix socket on which to run the proxy."
complete -c kubectl -n "__kubectl_using_command proxy" -l "unix-socket" -d "='': Unix socket on which to run the proxy."
complete -c kubectl -n "__kubectl_using_command proxy" -s "w" -d "='': Also serve static files from the given directory under the specified prefix."
complete -c kubectl -n "__kubectl_using_command proxy" -l "www" -d "='': Also serve static files from the given directory under the specified prefix."
complete -c kubectl -n "__kubectl_using_command proxy" -s "P" -d "='/static/': Prefix to serve static files under, if static file directory is specified. kubectl proxy [--port=PORT] [--www=static-dir] [--www-prefix=prefix] [--api-prefix=prefix] [options]"
complete -c kubectl -n "__kubectl_using_command proxy" -l "www-prefix" -d "='/static/': Prefix to serve static files under, if static file directory is specified. kubectl proxy [--port=PORT] [--www=static-dir] [--www-prefix=prefix] [--api-prefix=prefix] [options]"
complete -c kubectl -n "__kubectl_using_command cp" -s "c" -d "='': Container name. If omitted, the first container in the pod will be chosen kubectl cp <file-spec-src> <file-spec-dest> [options]"
complete -c kubectl -n "__kubectl_using_command cp" -l "container" -d "='': Container name. If omitted, the first container in the pod will be chosen kubectl cp <file-spec-src> <file-spec-dest> [options]"
complete -c kubectl -n "__kubectl_using_command apply" -l "all" -d "=false: [-all] to select all the specified resources."
complete -c kubectl -n "__kubectl_using_command apply" -l "cascade" -d "=true: Only relevant during a prune or a force apply. If true, cascade the deletion of the resources managed by pruned or deleted resources (e.g. Pods created by a ReplicationController)."
complete -c kubectl -n "__kubectl_using_command apply" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command apply" -s "f" -d "=[]: Filename, directory, or URL to files that contains the configuration to apply"
complete -c kubectl -n "__kubectl_using_command apply" -l "filename" -d "=[]: Filename, directory, or URL to files that contains the configuration to apply"
complete -c kubectl -n "__kubectl_using_command apply" -l "force" -d "=false: Delete and re-create the specified resource, when PATCH encounters conflict and has retried for 5 times."
complete -c kubectl -n "__kubectl_using_command apply" -l "grace-period" -d "=-1: Only relevant during a prune or a force apply. Period of time in seconds given to pruned or deleted resources to terminate gracefully. Ignored if negative."
complete -c kubectl -n "__kubectl_using_command apply" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command apply" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command apply" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command apply" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command apply" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command apply" -l "overwrite" -d "=true: Automatically resolve conflicts between the modified and live configuration by using values from the modified configuration"
complete -c kubectl -n "__kubectl_using_command apply" -l "prune" -d "=false: Automatically delete resource objects that do not appear in the configs and are created by either apply or create --save-config. Should be used with either -l or --all."
complete -c kubectl -n "__kubectl_using_command apply" -l "prune-whitelist" -d "=[]: Overwrite the default whitelist with <group/version/kind> for --prune"
complete -c kubectl -n "__kubectl_using_command apply" -l "record" -d "=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists."
complete -c kubectl -n "__kubectl_using_command apply" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command apply" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command apply" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command apply" -s "l" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command apply" -l "selector" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command apply" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command apply" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command apply" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command apply" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command apply" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command apply" -l "timeout" -d "=0s: Only relevant during a force apply. The length of time to wait before giving up on a delete of the old resource, zero means determine a timeout from the size of the object. Any other values should contain a corresponding time unit (e.g. 1s, 2m, 3h)."
complete -c kubectl -n "__kubectl_using_command apply" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl apply -f FILENAME [options]"
complete -c kubectl -n "__kubectl_using_command patch" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to update"
complete -c kubectl -n "__kubectl_using_command patch" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to update"
complete -c kubectl -n "__kubectl_using_command patch" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command patch" -l "local" -d "=false: If true, patch will operate on the content of the file, not the server-side resource."
complete -c kubectl -n "__kubectl_using_command patch" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command patch" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command patch" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command patch" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command patch" -s "p" -d "='': The patch to be applied to the resource JSON file."
complete -c kubectl -n "__kubectl_using_command patch" -l "patch" -d "='': The patch to be applied to the resource JSON file."
complete -c kubectl -n "__kubectl_using_command patch" -l "record" -d "=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists."
complete -c kubectl -n "__kubectl_using_command patch" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command patch" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command patch" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command patch" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command patch" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command patch" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command patch" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command patch" -l "type" -d "='strategic': The type of patch being provided; one of [json merge strategic] kubectl patch (-f FILENAME | TYPE NAME) -p PATCH [options]"
complete -c kubectl -n "__kubectl_using_command replace" -l "cascade" -d "=false: Only relevant during a force replace. If true, cascade the deletion of the resources managed by this resource (e.g. Pods created by a ReplicationController)."
complete -c kubectl -n "__kubectl_using_command replace" -s "f" -d "=[]: Filename, directory, or URL to files to use to replace the resource."
complete -c kubectl -n "__kubectl_using_command replace" -l "filename" -d "=[]: Filename, directory, or URL to files to use to replace the resource."
complete -c kubectl -n "__kubectl_using_command replace" -l "force" -d "=false: Delete and re-create the specified resource"
complete -c kubectl -n "__kubectl_using_command replace" -l "grace-period" -d "=-1: Only relevant during a force replace. Period of time in seconds given to the old resource to terminate gracefully. Ignored if negative."
complete -c kubectl -n "__kubectl_using_command replace" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command replace" -s "o" -d "='': Output mode. Use \"-o name\" for shorter output (resource/name)."
complete -c kubectl -n "__kubectl_using_command replace" -l "output" -d "='': Output mode. Use \"-o name\" for shorter output (resource/name)."
complete -c kubectl -n "__kubectl_using_command replace" -l "record" -d "=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists."
complete -c kubectl -n "__kubectl_using_command replace" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command replace" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command replace" -l "save-config" -d "=false: If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future."
complete -c kubectl -n "__kubectl_using_command replace" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command replace" -l "timeout" -d "=0s: Only relevant during a force replace. The length of time to wait before giving up on a delete of the old resource, zero means determine a timeout from the size of the object. Any other values should contain a corresponding time unit (e.g. 1s, 2m, 3h)."
complete -c kubectl -n "__kubectl_using_command replace" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl replace -f FILENAME [options]"
complete -c kubectl -n "__kubectl_using_command convert" -s "f" -d "=[]: Filename, directory, or URL to files to need to get converted."
complete -c kubectl -n "__kubectl_using_command convert" -l "filename" -d "=[]: Filename, directory, or URL to files to need to get converted."
complete -c kubectl -n "__kubectl_using_command convert" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command convert" -l "local" -d "=true: If true, convert will NOT try to contact api-server but run locally."
complete -c kubectl -n "__kubectl_using_command convert" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command convert" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command convert" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command convert" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command convert" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command convert" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command convert" -l "schema-cache-dir" -d "='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '\$HOME/.kube/schema'"
complete -c kubectl -n "__kubectl_using_command convert" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command convert" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command convert" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command convert" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command convert" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
complete -c kubectl -n "__kubectl_using_command convert" -l "validate" -d "=true: If true, use a schema to validate the input before sending it kubectl convert -f FILENAME [options]"
complete -c kubectl -n "__kubectl_using_command label" -l "all" -d "=false: select all resources in the namespace of the specified resource types"
complete -c kubectl -n "__kubectl_using_command label" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command label" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to update the labels"
complete -c kubectl -n "__kubectl_using_command label" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to update the labels"
complete -c kubectl -n "__kubectl_using_command label" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command label" -l "local" -d "=false: If true, label will NOT contact api-server but run locally."
complete -c kubectl -n "__kubectl_using_command label" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command label" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command label" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command label" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command label" -l "overwrite" -d "=false: If true, allow labels to be overwritten, otherwise reject label updates that overwrite existing labels."
complete -c kubectl -n "__kubectl_using_command label" -l "record" -d "=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists."
complete -c kubectl -n "__kubectl_using_command label" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command label" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command label" -l "resource-version" -d "='': If non-empty, the labels update will only succeed if this is the current resource-version for the object. Only valid when specifying a single resource."
complete -c kubectl -n "__kubectl_using_command label" -s "l" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command label" -l "selector" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command label" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command label" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command label" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command label" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command label" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]. kubectl label [--overwrite] (-f FILENAME | TYPE NAME) KEY_1=VAL_1 ... KEY_N=VAL_N [--resource-version=version] [options]"
complete -c kubectl -n "__kubectl_using_command annotate" -l "all" -d "=false: select all resources in the namespace of the specified resource types"
complete -c kubectl -n "__kubectl_using_command annotate" -l "dry-run" -d "=false: If true, only print the object that would be sent, without sending it."
complete -c kubectl -n "__kubectl_using_command annotate" -s "f" -d "=[]: Filename, directory, or URL to files identifying the resource to update the annotation"
complete -c kubectl -n "__kubectl_using_command annotate" -l "filename" -d "=[]: Filename, directory, or URL to files identifying the resource to update the annotation"
complete -c kubectl -n "__kubectl_using_command annotate" -l "include-extended-apis" -d "=true: If true, include definitions of new APIs via calls to the API server. [default true]"
complete -c kubectl -n "__kubectl_using_command annotate" -l "local" -d "=false: If true, annotation will NOT contact api-server but run locally."
complete -c kubectl -n "__kubectl_using_command annotate" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command annotate" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command annotate" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command annotate" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command annotate" -l "overwrite" -d "=false: If true, allow annotations to be overwritten, otherwise reject annotation updates that overwrite existing annotations."
complete -c kubectl -n "__kubectl_using_command annotate" -l "record" -d "=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists."
complete -c kubectl -n "__kubectl_using_command annotate" -s "R" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command annotate" -l "recursive" -d "=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
complete -c kubectl -n "__kubectl_using_command annotate" -l "resource-version" -d "='': If non-empty, the annotation update will only succeed if this is the current resource-version for the object. Only valid when specifying a single resource."
complete -c kubectl -n "__kubectl_using_command annotate" -s "l" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command annotate" -l "selector" -d "='': Selector (label query) to filter on"
complete -c kubectl -n "__kubectl_using_command annotate" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command annotate" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command annotate" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command annotate" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command annotate" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]. kubectl annotate [--overwrite] (-f FILENAME | TYPE NAME) KEY_1=VAL_1 ... KEY_N=VAL_N [--resource-version=version] [options]"
complete -c kubectl -n "__kubectl_using_command config" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command config" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]. kubectl config get-contexts [(-o|--output=)name)] [options]"
complete -c kubectl -n "__kubectl_using_command config" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]. kubectl config get-contexts [(-o|--output=)name)] [options]"
complete -c kubectl -n "__kubectl_using_command config" -l "set-raw-bytes" -d "=false: When writing a []byte PROPERTY_VALUE, write the given string directly without base64 decoding. kubectl config set PROPERTY_NAME PROPERTY_VALUE [options]"
complete -c kubectl -n "__kubectl_using_command config" -l "api-version" -d "='': api-version for the cluster entry in kubeconfig"
complete -c kubectl -n "__kubectl_using_command config" -l "certificate-authority" -d "='': path to certificate-authority file for the cluster entry in kubeconfig"
complete -c kubectl -n "__kubectl_using_command config" -l "embed-certs" -d "=false: embed-certs for the cluster entry in kubeconfig"
complete -c kubectl -n "__kubectl_using_command config" -l "insecure-skip-tls-verify" -d "=false: insecure-skip-tls-verify for the cluster entry in kubeconfig"
complete -c kubectl -n "__kubectl_using_command config" -l "server" -d "='': server for the cluster entry in kubeconfig kubectl config set-cluster NAME [--server=server] [--certificate-authority=path/to/certificate/authority] [--insecure-skip-tls-verify=true] [options]"
complete -c kubectl -n "__kubectl_using_command config" -l "cluster" -d "='': cluster for the context entry in kubeconfig"
complete -c kubectl -n "__kubectl_using_command config" -l "namespace" -d "='': namespace for the context entry in kubeconfig"
complete -c kubectl -n "__kubectl_using_command config" -l "user" -d "='': user for the context entry in kubeconfig kubectl config set-context NAME [--cluster=cluster_nickname] [--user=user_nickname] [--namespace=namespace] [options]"
complete -c kubectl -n "__kubectl_using_command config" -l "client-certificate" -d "=certfile --client-key=keyfile"
complete -c kubectl -n "__kubectl_using_command config" -l "token" -d "=bearer_token"
complete -c kubectl -n "__kubectl_using_command config" -l "username" -d "=basic_user --password=basic_password"
complete -c kubectl -n "__kubectl_using_command config" -l "auth-provider" -d "='': auth provider for the user entry in kubeconfig"
complete -c kubectl -n "__kubectl_using_command config" -l "auth-provider-arg" -d "=[]: 'key=value' arugments for the auth provider"
complete -c kubectl -n "__kubectl_using_command config" -l "client-certificate" -d "='': path to client-certificate file for the user entry in kubeconfig"
complete -c kubectl -n "__kubectl_using_command config" -l "client-key" -d "='': path to client-key file for the user entry in kubeconfig"
complete -c kubectl -n "__kubectl_using_command config" -l "embed-certs" -d "=false: embed client cert/key for the user entry in kubeconfig"
complete -c kubectl -n "__kubectl_using_command config" -l "password" -d "='': password for the user entry in kubeconfig"
complete -c kubectl -n "__kubectl_using_command config" -l "token" -d "='': token for the user entry in kubeconfig"
complete -c kubectl -n "__kubectl_using_command config" -l "username" -d "='': username for the user entry in kubeconfig kubectl config set-credentials NAME [--client-certificate=path/to/certfile] [--client-key=path/to/keyfile] [--token=bearer_token] [--username=basic_user] [--password=basic_password] [--auth-provider=provider_name] [--auth-provider-arg=key=value] [options]"
complete -c kubectl -n "__kubectl_using_command config" -l "flatten" -d "=false: flatten the resulting kubeconfig file into self-contained output (useful for creating portable kubeconfig files)"
complete -c kubectl -n "__kubectl_using_command config" -l "merge" -d "=true: merge the full hierarchy of kubeconfig files"
complete -c kubectl -n "__kubectl_using_command config" -l "minify" -d "=false: remove all information not used by current-context from the output"
complete -c kubectl -n "__kubectl_using_command config" -l "no-headers" -d "=false: When using the default or custom-column output format, don't print headers."
complete -c kubectl -n "__kubectl_using_command config" -s "o" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command config" -l "output" -d "='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath]."
complete -c kubectl -n "__kubectl_using_command config" -l "output-version" -d "='': Output the formatted object with the given group version (for ex: 'extensions/v1beta1')."
complete -c kubectl -n "__kubectl_using_command config" -l "raw" -d "=false: display raw byte data"
complete -c kubectl -n "__kubectl_using_command config" -s "a" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command config" -l "show-all" -d "=false: When printing, show all resources (default hide terminated pods.)"
complete -c kubectl -n "__kubectl_using_command config" -l "show-labels" -d "=false: When printing, show all labels as the last column (default hide labels column)"
complete -c kubectl -n "__kubectl_using_command config" -l "sort-by" -d "='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string."
complete -c kubectl -n "__kubectl_using_command config" -l "template" -d "='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]. kubectl config view [options]"
complete -c kubectl -n "__kubectl_using_command version" -s "c" -d "=false: Client version only (no server required)."
complete -c kubectl -n "__kubectl_using_command version" -l "client" -d "=false: Client version only (no server required)."
complete -c kubectl -n "__kubectl_using_command version" -l "short" -d "=false: Print just the version number. kubectl version [options]"

# Shared options
complete -c kubectl -l "alsologtostderr" -d "=false: log to standard error as well as files"
complete -c kubectl -l "as" -d "='': Username to impersonate for the operation"
complete -c kubectl -l "certificate-authority" -d "='': Path to a cert. file for the certificate authority"
complete -c kubectl -l "client-certificate" -d "='': Path to a client certificate file for TLS"
complete -c kubectl -l "client-key" -d "='': Path to a client key file for TLS"
complete -c kubectl -l "cluster" -d "='': The name of the kubeconfig cluster to use"
complete -c kubectl -l "context" -d "='': The name of the kubeconfig context to use"
complete -c kubectl -l "insecure-skip-tls-verify" -d "=false: If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure"
complete -c kubectl -l "kubeconfig" -d "'': Path to the kubeconfig file to use for CLI requests."
complete -c kubectl -l "log-backtrace-at" -d "=:0: when logging hits line file:N, emit a stack trace"
complete -c kubectl -l "log-dir" -d "='': If non-empty, write log files in this directory"
complete -c kubectl -l "log-flush-frequency" -d "=5s: Maximum number of seconds between log flushes"
complete -c kubectl -l "logtostderr" -d "=true: log to standard error instead of files"
complete -c kubectl -l "match-server-version" -d "=false: Require server version to match client version"
complete -c kubectl -s "n" -l "namespace" -d "'': If present, the namespace scope for this CLI request"
complete -c kubectl -l "password" -d "='': Password for basic authentication to the API server"
complete -c kubectl -l "request-timeout" -d "='0': The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests."
complete -c kubectl -s "s" -l "server" -d "='': The address and port of the Kubernetes API server"
complete -c kubectl -l "stderrthreshold" -d "=2: logs at or above this threshold go to stderr"
complete -c kubectl -l "token" -d "='': Bearer token for authentication to the API server"
complete -c kubectl -l "user" -d "='': The name of the kubeconfig user to use"
complete -c kubectl -l "username" -d "='': Username for basic authentication to the API server"
complete -c kubectl -s "v" -l "v" -d "=0: log level for V logs"
complete -c kubectl -l "vmodule" -d "=: comma-separated list of pattern=N settings for file-filtered logging"

complete -c kubectl -f -n "__kubectl_using_option n namespace" -a "(__kubectl_namespaces)" -d "Namespace"

# Get
complete -c kubectl -n "__kubectl_using_command get" -a "(__kubectl_resource_types)" -d "Resource Type"
complete -c kubectl -n "__kubectl_using_command get" -a "(__kubectl_pods (commandline -c))" -d "Pod"

# Describe
complete -c kubectl -n "__kubectl_using_command describe" -a "(__kubectl_resource_types)" -d "Resource Type"
complete -c kubectl -n "__kubectl_using_command describe" -a "(__kubectl_pods (commandline -c))" -d "Pod"

# Logs
complete -f -c kubectl -n "__kubectl_using_command logs" -a "(__kubectl_pods (commandline -c))" -d "Pod"
complete -f -c kubectl -n "__kubectl_using_command logs" -a "(__kubectl_containers (commandline -c))" -d "Container"
